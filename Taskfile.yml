version: 3

silent: true

dotenv: ['.env']

env:
  LOCAL_PLATFORM: '{{.DOCKER_LOCAL_PLATFORM | default "linux/arm64"}}'
  PLATFORM: '{{.DOCKER_PLATFORM | default "linux/amd64,linux/arm64"}}'
  TAG: '{{.DOCKER_IMAGE_TAG | default "codebarista/octane:latest"}}'
  REGISTRY: '{{.DOCKER_REGISTRY | default "docker.io"}}'

tasks:

  default: task -l

  login:
    desc: Log in to the container registry
    cmd: docker login {{.REGISTRY}}

  build:
    desc: Build multi-arch octane image and put out
    internal: true
    cmds:
      - echo "Platform $PLATFORM"
      - echo "Tag $TAG"
      - docker buildx create --name=container --driver=docker-container --use
      - docker buildx build --platform={{.PLATFORM}} -t {{.TAG}} --output={{.OUTPUT}} src
      - task: clear
      - task: prune

  push:
    desc: Build and push image to remote registry
    cmds:
      - task: login
      - task: build
        vars:
          PLATFORM: '{{.PLATFORM}}'
          OUTPUT: type=registry --push

  load:
    desc: Build and load image to local docker
    cmds:
      - task: build
        vars:
          PLATFORM: '{{.LOCAL_PLATFORM}}'
          OUTPUT: type=docker --load

  prune:
    desc: Prune dangling images
    cmd: docker image prune --force --filter=dangling=true

  clear:
    desc: Remove buildx container
    cmd: docker buildx rm container

  run:
    desc: Run the octane docker image
    cmd: docker run -it --rm {{.TAG}} sh
